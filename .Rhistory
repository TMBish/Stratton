df
films = get_tomatoes('Tom Hanks')
films = append_box_office(films)
head(films)
films = filter(films, !is.na(intl_revenue))
films = cluster(films, cluster_df)
cluster_df = function(df, clusters = 3, dimensions = c("rating", "intl_revenue")) {
train_matrix = df[,dimensions]
kmean_model = kmeans(train_matrix, clusters)
output = df %>% mutate(cluster = factor(kmean_model$cluster))
return(output)
}
films = cluster_df(films)
head(films)
length(unique(films$cluster))
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0,100)) +
scale_x_comma() +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Encircle clusters
# for (clust in unqique(df$cluster)) {
#
#   gg = gg + geom_encircle(
#     data = filter(df, cluster == clust),
#     color = brewer.pal(length(unique(df$cluster)), name = "Accent"),
#     expand = 0.07
#   )
# }
}
chart_cluster(df)
test = chart_cluster(Df)
test = chart_cluster(df)
test
install.package(gcookbook)
install.packages('gcookbook')
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0,100)) +
scale_x_comma() +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Encircle clusters
# for (clust in unqique(df$cluster)) {
#
#   gg = gg + geom_encircle(
#     data = filter(df, cluster == clust),
#     color = brewer.pal(length(unique(df$cluster)), name = "Accent"),
#     expand = 0.07
#   )
# }
}
chart_cluster(df)
test = chart_cluster(df)
test
axes = c("rating", "intl_revenue")
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0,100)) +
scale_x_comma() +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
gg
head(df)
df = films
chart_cluster(df)
test = chart_cluster(df)
test
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0,100)) +
scale_x_comma() +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Encircle clusters
for (clust in unqique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent"),
expand = 0.07
)
}
}
test = chart_cluster(df)
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0,100)) +
scale_x_comma() +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Encircle clusters
for (clust in unique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent"),
expand = 0.07
)
}
}
test = chart_cluster(df)
test
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0,100)) +
scale_x_comma() +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
gg
unique(df$cluster)
clust = unique(df$cluster)[1]
clust
filter(df, cluster == clust)
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent"),
expand = 0.07
)
brewer.pal(length(unique(df$cluster)), name = "Accent")
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
expand = 0.07
)
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1]
)
help("geom_encircle")
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
s_shape=0.9, expand=0.07
)
geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
s_shape=0.9, expand=0.5
)
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
s_shape=0.9, expand=0.5
)
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
s_shape=0.9, expand=0.01
)
geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
s_shape=0.1, expand=0.01
)
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
s_shape=0.1, expand=0.01
)
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
s_shape=1, expand=0.01
)
gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[1],
s_shape=1, expand=0.05
)
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0,100)) +
scale_x_comma() +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Encircle clusters
ind = 1
for (clust in unique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[ind],
s_shape=.9, expand=0.05
)
ind = ind + 1
}
}
chart_cluster(df)
test = chart_cluster(df)
test
gg
# Encircle clusters
ind = 1
for (clust in unique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[ind],
s_shape=0.9, expand=0.05
)
ind = ind + 1
}
gg
min(df$intl_revenue)
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0, 1.1 * max(df[,axes[1]]))) +
scale_x_continuous(limits = c(0, 1.1 * max(df[,axes[2]]))) +
scale_x_comma() +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Encircle clusters
ind = 1
for (clust in unique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[ind],
s_shape=0.9, expand=0.05
)
ind = ind + 1
}
return(gg)
}
test= chart_cluster(df)
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0, 1.1 * max(df[,axes[1]]))) +
scale_x_comma(limits = c(0, 1.1 * max(df[,axes[2]]))) +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Encircle clusters
ind = 1
for (clust in unique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[ind],
s_shape=0.9, expand=0.05
)
ind = ind + 1
}
return(gg)
}
test= chart_cluster(df)
test
# Produce Graph -----------------------------------------------------------
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
# Translate axis vars to english axis labels
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
# Produce graph
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0, 1.1 * max(df[,axes[1]]))) +
scale_x_comma(limits = c(-100000, 1.1 * max(df[,axes[2]]))) +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Loop and encircle the clusters using GGALT functionality
ind = 1
for (clust in unique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[ind],
s_shape=0.9, expand=0.05
)
ind = ind + 1
}
return(gg)
}
chart_cluster(df)
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
# Translate axis vars to english axis labels
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
# Produce graph
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0, 1.1 * max(df[,axes[1]]))) +
scale_x_comma(limits = c(-100000, 1.1 * max(df[,axes[2]]))) +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Loop and encircle the clusters using GGALT functionality
ind = 1
for (clust in unique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[ind],
s_shape=0.1, expand=0.05
)
ind = ind + 1
}
return(gg)
}
chart_cluster(df)
chart_cluster = function(df, axes = c("rating", "intl_revenue")) {
require(ggplot2)
require(hrbrthemes)
require(ggalt)
require(gcookbook)
require(RColorBrewer)
# Translate axis vars to english axis labels
x_lab = switch(axes[2], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
y_lab = switch(axes[1], "rating" = "Rotten Tomatoes Score"
, "intl_revenue" = "Box Office Revenue")
# Produce graph
gg = ggplot(data = df, aes_string(y = axes[1], x = axes[2], color = "cluster")) +
geom_point(size = 3) +
scale_y_continuous(limits = c(0, 1.1 * max(df[,axes[1]]))) +
scale_x_comma(limits = c(-100000, 1.1 * max(df[,axes[2]]))) +
scale_color_brewer(type = 'qual', palette = 'Accent') +
labs(x=x_lab, y=y_lab,
title="Test plot",
subtitle="A plot that is only useful for demonstration purposes",
caption="Powered by Tom Bishop and OSIRIS") +
theme_ipsum_rc(grid="XY") +
theme(axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"))
# Loop and encircle the clusters using GGALT functionality
ind = 1
for (clust in unique(df$cluster)) {
gg = gg + geom_encircle(
data = filter(df, cluster == clust),
color = brewer.pal(length(unique(df$cluster)), name = "Accent")[ind],
s_shape=0.1, expand=0.001
)
ind = ind + 1
}
return(gg)
}
chart_cluster(df)
install.packages('highcharter')
library(ggalt)
ggalt
geom_encircle()
geom_encircle
head(df)
hart = hchart(df, "scatter", hcaes(x = axes[2], y = axes[1], group = cluster))
library(highcharter)
hart = hchart(df, "scatter", hcaes(x = axes[2], y = axes[1], group = cluster))
axes = c("rating", "intl_revenue")
hart = hchart(df, "scatter", hcaes(x = axes[2], y = axes[1], group = cluster))
hart = hchart(df, "scatter", hcaes(x = parse(text = axes[2]), y = parse(text=axes[1]), group = cluster))
hart = hchart(df, "scatter", hcaes(x = eval(parse(text = axes[2])), y = eval(parse(text=axes[1])), group = cluster))
axes
hart = hchart(df, "scatter", hcaes(x = parse(text = axes[2]), y = parse(text=axes[1]), group = cluster))
axes

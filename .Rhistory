require(rvest)
celeb_url = sprintf("https://www.rottentomatoes.com/celebrity/%s/", person)
celeb_url %>%
html() %>%
html_nodes(xpath='td') %>%
html_table()
person()
person = "tom_cruise"
celeb_url = sprintf("https://www.rottentomatoes.com/celebrity/%s/", person)
celeb_url %>%
html() %>%
html_nodes(xpath='td') %>%
html_table()
celeb_url %>%
read_html() %>%
html_nodes(xpath='td') %>%
html_table()
celeb_url
celeb_url %>%
read_html() %>%
html_nodes'table')
celeb_url %>%
read_html() %>%
html_nodes'table')
celeb_url %>%
read_html() %>%
html_nodes('table')
df =
celeb_url %>%
read_html() %>%
html_nodes('table') %>%
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_tomatoes.R')
films = get_tomatoes("Brad Pitt")
assert_that(
nrow(films) >= 1 &&
ncol(films) == 4 &&
"tbl_df" %in% class(films))
require(assertthat)
require(dplyr)
require(rvest)
require(stringr)
# Using a films data frame from the get_tomatoes function
assert_that(
nrow(films) >= 1 &&
ncol(films) == 4 &&
"tbl_df" %in% class(films))
# Using a films data frame from the get_tomatoes function
assert_that(
nrow(films) >= 1 &&
ncol(films) == 4 &&
"tbl_df" %in% class(films))
cash_money = rep(0, nrow(films))
head(film)
head(films)
film = film[3,2]
film = films[3,2]
film
base = "http://www.boxofficemojo.com/movies/?id=%s.htm"
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("[[:punct:]]", "")
film
url = sprintf(base, film)
flim_url = url
film_url
film_url = flim_url
film_url
mojo_page =
film_url %>%
read_html() %>%
html_nodes("td") %>%
html_text()
head(mojo_page)
mojo_page
ind = grep("(?i)\\= worldwide:", mojo_page)
ind
ind = grep("(?i)= worldwide:", mojo_page)
ind = grep("= Worldwide:", mojo_page)
ind
mojo_page[26]
test = mojo_page[26]
ind = grep("\\= Worldwide:", mojo_page)
ind = grep("= worldwide:", mojo_page, ignore.case = TRUE)
ind = grep("\\= worldwide:", mojo_page, ignore.case = TRUE)
ind
mojo_page[1:10]
ind = grep("Production Budget", mojo_page)
ind
mojo_page[3]
mojo_page[4]
mojo_page[5]
mojo_page[6]
mojo_page =
film_url %>%
read_html() %>%
html_nodes("b") %>%
html_text()
mojo_page
ind = grep("\\= worldwide:", mojo_page, ignore.case = TRUE)
ind = grep("Worldwide:", mojo_page, ignore.case = TRUE)
revenue = as.integer(str_replace_all(mojo_page[ind + 1], "(\\$)|(,)",""))
revenue
test = mojo_page[9]
test
cost = as.integer(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
cost_string = cost
cost_string = test
cost = as.integer(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
magnitude = str_extract(cost_string, "(?i)million|thousand")
multipler = ifelse(magnitude == "million", 1000000, 1000)
cost = as.integer(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
cost
cost = as.numeric(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
cost
multipler
typeof(cost)
format_url = function(film) {
base = "http://www.boxofficemojo.com/movies/?id=%s.htm"
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("[[:punct:]]", "")
url = sprintf(base, film)
return(url)
}
cash_money = rep(0, nrow(films))
cost_money = rep(0, nrow(films))
i = 5
flim_title = films[i, "title"]
film_url = format_url(film_title)
mojo_page =
film_url %>%
read_html() %>%
html_nodes("b") %>%
html_text()
film_title = films[i, "title"]
film_url = format_url(film_title)
mojo_page =
film_url %>%
read_html() %>%
html_nodes("b") %>%
html_text()
ind = grep("Worldwide:", mojo_page, ignore.case = TRUE)
revenue = as.integer(str_replace_all(mojo_page[ind + 1], "(\\$)|(,)",""))
cost_string = mojo_page[9]
if (cost_string == "N/A") {
cost = NA
} else {
magnitude = str_extract(cost_string, "(?i)million|thousand")
multipler = ifelse(magnitude == "million", 1000000, 1000)
cost = as.numeric(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
}
revenue
cost
typeof(revenue)
multipler = as.integer(ifelse(magnitude == "million", 1000000, 1000))
cost = as.numeric(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
cost
as.integer(cost)
for (i in seq_along(nrow(films))) {
film_title = films[i, "title"]
film_url = format_url(film_title)
mojo_page =
film_url %>%
read_html() %>%
html_nodes("b") %>%
html_text()
ind = grep("Worldwide:", mojo_page, ignore.case = TRUE)
revenue = as.integer(str_replace_all(mojo_page[ind + 1], "(\\$)|(,)",""))
cost_string = mojo_page[9]
# Some handy formatting on the production cost!
# Thanks box office mojo!
if (cost_string == "N/A") {
cost = NA
} else {
magnitude = str_extract(cost_string, "(?i)million|thousand")
multipler = ifelse(magnitude == "million", 1000000, 1000)
cost = as.numeric(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
}
# Fill the vec with the vals
cash_money[i] = revenue
cost_money[i] = as.integer(cost)
}
i
film_title = films[i, "title"]
film_url = format_url(film_title)
mojo_page =
film_url %>%
read_html() %>%
html_nodes("b") %>%
html_text()
mojo_page
film_url
ind = grep("Worldwide:", mojo_page, ignore.case = TRUE)
ind
revenue = as.integer(str_replace_all(mojo_page[ind + 1], "(\\$)|(,)",""))
cost_string = mojo_page[9]
for (i in seq_along(nrow(films))) {
tryCatch(
{
film_title = films[i, "title"]
film_url = format_url(film_title)
mojo_page =
film_url %>%
read_html() %>%
html_nodes("b") %>%
html_text()
ind = grep("Worldwide:", mojo_page, ignore.case = TRUE)
revenue = as.integer(str_replace_all(mojo_page[ind + 1], "(\\$)|(,)",""))
cost_string = mojo_page[9]
# Some handy formatting on the production cost!
# Thanks box office mojo!
if (cost_string == "N/A") {
cost = NA
} else {
magnitude = str_extract(cost_string, "(?i)million|thousand")
multipler = ifelse(magnitude == "million", 1000000, 1000)
cost = as.numeric(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
}
# Fill the vec with the vals
cash_money[i] = revenue
cost_money[i] = as.integer(cost)
}, error = function(e) {
cash_money[i] = NA
cost_money[i] = NA
})
}
cash_money
cost_money
films
seq_along(nrow(films))
seq_along(films)
seq_along(films[1,])
seq_along(films[,1])
for (i in 1:nrow(films)) {
tryCatch(
{
film_title = films[i, "title"]
film_url = format_url(film_title)
mojo_page =
film_url %>%
read_html() %>%
html_nodes("b") %>%
html_text()
ind = grep("Worldwide:", mojo_page, ignore.case = TRUE)
revenue = as.integer(str_replace_all(mojo_page[ind + 1], "(\\$)|(,)",""))
cost_string = mojo_page[9]
# Some handy formatting on the production cost!
# Thanks box office mojo!
if (cost_string == "N/A") {
cost = NA
} else {
magnitude = str_extract(cost_string, "(?i)million|thousand")
multipler = ifelse(magnitude == "million", 1000000, 1000)
cost = as.numeric(str_replace_all(cost_string, "(\\$)|([a-z])","")) * multipler
}
# Fill the vec with the vals
cash_money[i] = revenue
cost_money[i] = as.integer(cost)
}, error = function(e) {
cash_money[i] = NA
cost_money[i] = NA
})
}
cash_money
cost_money
install.packages('profvis')
library(profvis)
source('~/.active-rstudio-document')
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
install.packages('Rprof')
getwd()
Rprof("profile1.out", line.profiling = TRUE)
Rprof("profile1.out", line.profiling = TRUE)
eval(parse(file = "get_box_office.R", keep.source=TRUE))
Rprof(NULL)
summaryRprof("profile1.out", lines = "show")
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
head(test)
test
View(test)
View(test)
film = 'Mr. & Mrs. Smith'
format_url = function(film) {
base = "http://www.boxofficemojo.com/movies/?id=%s.htm"
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("[[:punct:]]", "")
url = sprintf(base, film)
return(url)
}
format_url(film)
film
format_url = function(film) {
base = "http://www.boxofficemojo.com/movies/?id=%s.htm"
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("\\&", "and") %>%
str_replace_all("\\([a-z]+\\)","") %>%
str_replace_all("[[:punct:]]", "")
url = sprintf(base, film)
return(url)
}
format_url(film)
film = "Mr and Mrs SMith (tester)"
format_url(film)
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
FILM
film
flims
films
test
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
test
View(test)
film = "Seven (Se7en)"
format_url(film)
format_url = function(film) {
base = "http://www.boxofficemojo.com/movies/?id=%s.htm"
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("\\&", "and") %>%
str_replace_all("(\\()([a-z]+)(\\))","") %>%
str_replace_all("[[:punct:]]", "")
url = sprintf(base, film)
return(url)
}
format_url(film)
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("\\&", "and")
film
film %>%   str_replace_all("(\\()([a-z]+)(\\))","")
film %>%   str_replace_all("\\([a-z]+\\)","")
format_url = function(film) {
base = "http://www.boxofficemojo.com/movies/?id=%s.htm"
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("\\&", "and") %>%
str_replace_all("(\\([a-z0-9]+\\)","") %>%
str_replace_all("[[:punct:]]", "")
url = sprintf(base, film)
return(url)
}
format_url(film)
#   for example try looking up the kids movie "Megamind".
#   What the fuck man
format_url = function(film) {
base = "http://www.boxofficemojo.com/movies/?id=%s.htm"
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("\\&", "and") %>%
str_replace_all("(\\[a-z0-9]+\\)","") %>%
str_replace_all("[[:punct:]]", "")
url = sprintf(base, film)
return(url)
}
format_url(film)
format_url = function(film) {
base = "http://www.boxofficemojo.com/movies/?id=%s.htm"
film =
str_replace(film, "(?i)^the ", "") %>%
tolower() %>%
str_replace_all(" ", "") %>%
str_replace_all("\\&", "and") %>%
str_replace_all("\\([a-z0-9]+\\)","") %>%
str_replace_all("[[:punct:]]", "")
url = sprintf(base, film)
return(url)
}
format_url(film)
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
test
View(test)
rm(test)
rm(base)
rm(cash_money)
rm(cost_money)
rm(cost)
rm(cost_string)
rm(film)
rm(film_url)
rm(flim_url)
rm(i)
rm(ind)
rm(magnitude)
rm(mojo_page)
rm(multipler)
rm(revenue)
rm(url)
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
get_box_office(films)
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
get_box_office(films)
test = get_box_office(films)
test
test[1,6]
as.integer(test[,6])
as.integer(test$prod_cost)
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
source('C:/Users/XPS/Dropbox/Projects/Stratton/get_box_office.R')
test = get_box_office(films)
test
shiny::runApp('C:/Users/XPS/Dropbox/Projects/OddsR')
runApp('C:/Users/XPS/Dropbox/Projects/OddsR')
runApp('C:/Users/XPS/Dropbox/Projects/OddsR')
library(shiny)
ui <- shinyUI(fluidPage(
tags$head(tags$style(
HTML('
#sidebar {
background-color: #dec4de;
}
body, label, input, button, select {
font-family: "Arial";
}')
)),
titlePanel("Hello Shiny!"),
sidebarLayout(
sidebarPanel(id="sidebar",
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput("distPlot")
)
)
))
server <- shinyServer(function(input, output) {
output$distPlot <- renderPlot({
x    <- faithful[, 2]  # Old Faithful Geyser data
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
})
shinyApp(ui=ui,server=server)
runApp('App')
help("tags")
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
